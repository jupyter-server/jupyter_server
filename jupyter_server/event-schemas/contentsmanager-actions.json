{
    "$id": "eventlogging.jupyter.org/notebook/contentsmanager-actions",
    "version": 1,
    "title": "Contents Manager activities",
    "description": "Record actions on files via the ContentsManager REST API.\n\nThe notebook ContentsManager REST API is used by all frontends to retreive,\nsave, list, delete and perform other actions on notebooks, directories,\nand other files through the UI. This is pluggable - the default acts on\nthe file system, but can be replaced with a different ContentsManager\nimplementation - to work on S3, Postgres, other object stores, etc.\nThe events get recorded regardless of the ContentsManager implementation\nbeing used.\n\nLimitations:\n\n1. This does not record all filesystem access, just the ones that happen\n   explicitly via the notebook server's REST API. Users can (and often do)\n   trivially access the filesystem in many other ways (such as `open()` calls\n   in their code), so this is usually never a complete record.\n2. As with all events recorded by the notebook server, users most likely\n   have the ability to modify the code of the notebook server. Unless other\n   security measures are in place, these events should be treated as user\n   controlled and not used in high security areas.\n3. Events are only recorded when an action succeeds.\n",
    "type": "object",
    "required": [
        "action",
        "path"
    ],
    "properties": {
        "action": {
            "enum": [
                "get",
                "create",
                "save",
                "upload",
                "rename",
                "copy",
                "delete"
            ],
            "description": "Action performed by the ContentsManager API.\n\nThis is a required field.\n\nPossible values:\n\n1. get\n   Get contents of a particular file, or list contents of a directory.\n\n2. create\n   Create a new directory or file at 'path'. Currently, name of the\n   file or directory is auto generated by the ContentsManager implementation.\n\n3. save\n   Save a file at path with contents from the client\n\n4. upload\n   Upload a file at given path with contents from the client\n\n5. rename\n   Rename a file or directory from value in source_path to\n   value in path.\n\n5. copy\n   Copy a file or directory from value in source_path to\n   value in path.\n\n6. delete\n   Delete a file or empty directory at given path\n"
        },
        "path": {
            "type": "string",
            "description": "Logical path on which the operation was performed.\n\nThis is a required field.\n"
        },
        "source_path": {
            "type": "string",
            "description": "Source path of an operation when action is 'copy' or 'rename'"
        }
    }
}